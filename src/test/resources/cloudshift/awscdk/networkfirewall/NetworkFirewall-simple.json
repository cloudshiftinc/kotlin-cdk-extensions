{
  "Resources": {
    "MyVpcF9F0CA6F": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.200.0.0/20",
        "EnableDnsHostnames": "true",
        "EnableDnsSupport": "true",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc"
          }
        ]
      }
    },
    "MyVpcPublicSubnet1SubnetF6608456": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.0.0/22",
        "MapPublicIpOnLaunch": "true",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PublicSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      }
    },
    "MyVpcPublicSubnet1RouteTableC46AB2F4": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PublicSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      }
    },
    "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet1SubnetF6608456"
        }
      }
    },
    "MyVpcPublicSubnet1DefaultRoute95FDF9EB": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVpcIGW5C4A4F63"
        },
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
        }
      },
      "DependsOn": [
        "MyVpcVPCGW488ACE0D"
      ]
    },
    "MyVpcPublicSubnet1EIP096967CB": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PublicSubnet1"
          }
        ]
      }
    },
    "MyVpcPublicSubnet1NATGatewayAD3400C1": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVpcPublicSubnet1EIP096967CB",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet1SubnetF6608456"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PublicSubnet1"
          }
        ]
      },
      "DependsOn": [
        "MyVpcPublicSubnet1DefaultRoute95FDF9EB",
        "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB"
      ]
    },
    "MyVpcPublicSubnet2Subnet492B6BFB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.4.0/22",
        "MapPublicIpOnLaunch": "true",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PublicSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      }
    },
    "MyVpcPublicSubnet2RouteTable1DF17386": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PublicSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      }
    },
    "MyVpcPublicSubnet2RouteTableAssociation227DE78D": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
        }
      }
    },
    "MyVpcPublicSubnet2DefaultRoute052936F6": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVpcIGW5C4A4F63"
        },
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
        }
      },
      "DependsOn": [
        "MyVpcVPCGW488ACE0D"
      ]
    },
    "MyVpcPublicSubnet2EIP8CCBA239": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PublicSubnet2"
          }
        ]
      }
    },
    "MyVpcPublicSubnet2NATGateway91BFBEC9": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVpcPublicSubnet2EIP8CCBA239",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PublicSubnet2"
          }
        ]
      },
      "DependsOn": [
        "MyVpcPublicSubnet2DefaultRoute052936F6",
        "MyVpcPublicSubnet2RouteTableAssociation227DE78D"
      ]
    },
    "MyVpcPrivateSubnet1Subnet5057CF7E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.8.0/22",
        "MapPublicIpOnLaunch": "false",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PrivateSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      }
    },
    "MyVpcPrivateSubnet1RouteTable8819E6E2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PrivateSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      }
    },
    "MyVpcPrivateSubnet1RouteTableAssociation56D38C7E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
        },
        "SubnetId": {
          "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
        }
      }
    },
    "MyVpcPrivateSubnet1DefaultRouteA8CDE2FA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVpcPublicSubnet1NATGatewayAD3400C1"
        },
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
        }
      }
    },
    "MyVpcPrivateSubnet2Subnet0040C983": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.12.0/22",
        "MapPublicIpOnLaunch": "false",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PrivateSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      }
    },
    "MyVpcPrivateSubnet2RouteTableCEDCEECE": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc/PrivateSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      }
    },
    "MyVpcPrivateSubnet2RouteTableAssociation86A610DA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
        },
        "SubnetId": {
          "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
        }
      }
    },
    "MyVpcPrivateSubnet2DefaultRoute9CE96294": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVpcPublicSubnet2NATGateway91BFBEC9"
        },
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
        }
      }
    },
    "MyVpcIGW5C4A4F63": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc"
          }
        ]
      }
    },
    "MyVpcVPCGW488ACE0D": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "MyVpcIGW5C4A4F63"
        },
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      }
    },
    "MyVpcFirewallPolicyCfnFirewallPolicyCA70F78E": {
      "Type": "AWS::NetworkFirewall::FirewallPolicy",
      "Properties": {
        "FirewallPolicy": {
          "StatefulDefaultActions": [],
          "StatelessDefaultActions": [],
          "StatelessFragmentDefaultActions": []
        },
        "FirewallPolicyName": "FirewallPolicyc8a8a902177605f1977714e7820b5d805555e82430",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc"
          }
        ]
      }
    },
    "MyVpcFirewall5D3F14BC": {
      "Type": "AWS::NetworkFirewall::Firewall",
      "Properties": {
        "FirewallName": "MyFirewallc8a9fcc6a9c7750886fafeba070abc369c63af5e5a",
        "FirewallPolicyArn": {
          "Fn::GetAtt": [
            "MyVpcFirewallPolicyCfnFirewallPolicyCA70F78E",
            "FirewallPolicyArn"
          ]
        },
        "SubnetMappings": [
          {
            "SubnetId": {
              "Ref": "MyVpcPublicSubnet1SubnetF6608456"
            }
          },
          {
            "SubnetId": {
              "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MyVpc"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      }
    },
    "FirewallCustomResourceBEC1FB63": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"action\":\"DescribeFirewall\",\"service\":\"networkfirewall\",\"outputPaths\":[\"FirewallStatus.SyncStates.",
              {
                "Fn::Select": [
                  "0",
                  {
                    "Fn::GetAZs": ""
                  }
                ]
              },
              ".Attachment.EndpointId\",\"FirewallStatus.SyncStates.",
              {
                "Fn::Select": [
                  "1",
                  {
                    "Fn::GetAZs": ""
                  }
                ]
              },
              ".Attachment.EndpointId\"],\"parameters\":{\"FirewallArn\":\"",
              {
                "Fn::GetAtt": [
                  "MyVpcFirewall5D3F14BC",
                  "FirewallArn"
                ]
              },
              "\"},\"physicalResourceId\":{\"id\":\"",
              {
                "Fn::GetAtt": [
                  "MyVpcFirewall5D3F14BC",
                  "FirewallArn"
                ]
              },
              "\"},\"logApiResponseData\":true}"
            ]
          ]
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{\"action\":\"DescribeFirewall\",\"service\":\"networkfirewall\",\"outputPaths\":[\"FirewallStatus.SyncStates.",
              {
                "Fn::Select": [
                  "0",
                  {
                    "Fn::GetAZs": ""
                  }
                ]
              },
              ".Attachment.EndpointId\",\"FirewallStatus.SyncStates.",
              {
                "Fn::Select": [
                  "1",
                  {
                    "Fn::GetAZs": ""
                  }
                ]
              },
              ".Attachment.EndpointId\"],\"parameters\":{\"FirewallArn\":\"",
              {
                "Fn::GetAtt": [
                  "MyVpcFirewall5D3F14BC",
                  "FirewallArn"
                ]
              },
              "\"},\"physicalResourceId\":{\"id\":\"",
              {
                "Fn::GetAtt": [
                  "MyVpcFirewall5D3F14BC",
                  "FirewallArn"
                ]
              },
              "\"},\"logApiResponseData\":true}"
            ]
          ]
        },
        "InstallLatestAwsSdk": "false"
      },
      "DependsOn": [
        "FirewallCustomResourceCustomResourcePolicy238D4884",
        "MyVpcFirewall5D3F14BC"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "FirewallCustomResourceCustomResourcePolicy238D4884": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "network-firewall:DescribeFirewall",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MyVpcFirewall5D3F14BC",
                  "FirewallArn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FirewallCustomResourceCustomResourcePolicy238D4884",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "DependsOn": [
        "MyVpcFirewall5D3F14BC"
      ]
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "97f30e67419a1676a2215492723e5add1aa491caf0cbe2dd878fc4fab0468cd4.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": "120"
      },
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}
