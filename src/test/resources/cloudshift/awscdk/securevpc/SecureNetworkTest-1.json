{
  "Resources": {
    "MySecureVpc143D3F4C": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.200.0.0/20",
        "EnableDnsHostnames": "true",
        "EnableDnsSupport": "true",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc"
          }
        ]
      }
    },
    "MySecureVpcPublicSubnet1SubnetC1CFACB6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.0.0/26",
        "MapPublicIpOnLaunch": "true",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PublicSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcPublicSubnet1RouteTable1488DA42": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PublicSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcPublicSubnet1RouteTableAssociation158AD62B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureVpcPublicSubnet1RouteTable1488DA42"
        },
        "SubnetId": {
          "Ref": "MySecureVpcPublicSubnet1SubnetC1CFACB6"
        }
      }
    },
    "MySecureVpcPublicSubnet1DefaultRoute2F15B791": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MySecureVpcIGW5455B4C5"
        },
        "RouteTableId": {
          "Ref": "MySecureVpcPublicSubnet1RouteTable1488DA42"
        }
      },
      "DependsOn": [
        "MySecureVpcVPCGW09636829"
      ]
    },
    "MySecureVpcPublicSubnet1NATGateway99CA9F88": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MySecureVpcEipPoolEIP13CD624C3",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MySecureVpcPublicSubnet1SubnetC1CFACB6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PublicSubnet1"
          }
        ]
      },
      "DependsOn": [
        "MySecureVpcPublicSubnet1DefaultRoute2F15B791",
        "MySecureVpcPublicSubnet1RouteTableAssociation158AD62B"
      ]
    },
    "MySecureVpcPublicSubnet2Subnet7CD9DB65": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.0.64/26",
        "MapPublicIpOnLaunch": "true",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PublicSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcPublicSubnet2RouteTable7B5117BC": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PublicSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcPublicSubnet2RouteTableAssociation98924402": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureVpcPublicSubnet2RouteTable7B5117BC"
        },
        "SubnetId": {
          "Ref": "MySecureVpcPublicSubnet2Subnet7CD9DB65"
        }
      }
    },
    "MySecureVpcPublicSubnet2DefaultRoute862E7206": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MySecureVpcIGW5455B4C5"
        },
        "RouteTableId": {
          "Ref": "MySecureVpcPublicSubnet2RouteTable7B5117BC"
        }
      },
      "DependsOn": [
        "MySecureVpcVPCGW09636829"
      ]
    },
    "MySecureVpcPublicSubnet2NATGatewayB76D0BCE": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MySecureVpcEipPoolEIP2328E8810",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MySecureVpcPublicSubnet2Subnet7CD9DB65"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PublicSubnet2"
          }
        ]
      },
      "DependsOn": [
        "MySecureVpcPublicSubnet2DefaultRoute862E7206",
        "MySecureVpcPublicSubnet2RouteTableAssociation98924402"
      ]
    },
    "MySecureVpcPrivateSubnet1Subnet2B67239B": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.2.0/23",
        "MapPublicIpOnLaunch": "false",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PrivateSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcPrivateSubnet1RouteTable147B4865": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PrivateSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcPrivateSubnet1RouteTableAssociationB9C84423": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureVpcPrivateSubnet1RouteTable147B4865"
        },
        "SubnetId": {
          "Ref": "MySecureVpcPrivateSubnet1Subnet2B67239B"
        }
      }
    },
    "MySecureVpcPrivateSubnet1InternetRoute0A40F1EE": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MySecureVpcPublicSubnet1NATGateway99CA9F88"
        },
        "RouteTableId": {
          "Ref": "MySecureVpcPrivateSubnet1RouteTable147B4865"
        }
      }
    },
    "MySecureVpcPrivateSubnet2Subnet0FD482EF": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.4.0/23",
        "MapPublicIpOnLaunch": "false",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PrivateSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcPrivateSubnet2RouteTableE38B3B60": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PrivateSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcPrivateSubnet2RouteTableAssociationF57B2837": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureVpcPrivateSubnet2RouteTableE38B3B60"
        },
        "SubnetId": {
          "Ref": "MySecureVpcPrivateSubnet2Subnet0FD482EF"
        }
      }
    },
    "MySecureVpcPrivateSubnet2InternetRoute5CFEFB64": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MySecureVpcPublicSubnet2NATGatewayB76D0BCE"
        },
        "RouteTableId": {
          "Ref": "MySecureVpcPrivateSubnet2RouteTableE38B3B60"
        }
      }
    },
    "MySecureVpcIsolatedSubnet1SubnetB95E8349": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.8.0/23",
        "MapPublicIpOnLaunch": "false",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/IsolatedSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcIsolatedSubnet1RouteTable1917D216": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/IsolatedSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcIsolatedSubnet1RouteTableAssociation409766C3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureVpcIsolatedSubnet1RouteTable1917D216"
        },
        "SubnetId": {
          "Ref": "MySecureVpcIsolatedSubnet1SubnetB95E8349"
        }
      }
    },
    "MySecureVpcIsolatedSubnet2SubnetA0B68A85": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.10.0/23",
        "MapPublicIpOnLaunch": "false",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/IsolatedSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcIsolatedSubnet2RouteTable775A94EC": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/IsolatedSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcIsolatedSubnet2RouteTableAssociation519EF9E7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureVpcIsolatedSubnet2RouteTable775A94EC"
        },
        "SubnetId": {
          "Ref": "MySecureVpcIsolatedSubnet2SubnetA0B68A85"
        }
      }
    },
    "MySecureVpcIGW5455B4C5": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc"
          }
        ]
      }
    },
    "MySecureVpcVPCGW09636829": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "MySecureVpcIGW5455B4C5"
        },
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcRestrictDefaultSecurityGroupCustomResource20A88BBD": {
      "Type": "Custom::VpcRestrictDefaultSG",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
            "Arn"
          ]
        },
        "DefaultSecurityGroupId": {
          "Fn::GetAtt": [
            "MySecureVpc143D3F4C",
            "DefaultSecurityGroup"
          ]
        },
        "Account": {
          "Ref": "AWS::AccountId"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e00320776D655": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/IsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e0032"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e0032DefaultAssociationTestStackMySecureVpcIsolatedSubnet14D9AF0F62F03D336": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e00320776D655"
        },
        "SubnetId": {
          "Ref": "MySecureVpcIsolatedSubnet1SubnetB95E8349"
        }
      }
    },
    "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e0032DefaultAssociationTestStackMySecureVpcIsolatedSubnet2FE916EC96046E40E": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e00320776D655"
        },
        "SubnetId": {
          "Ref": "MySecureVpcIsolatedSubnet2SubnetA0B68A85"
        }
      }
    },
    "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e0032AllowInboundFromPrivateAndIsolatedSubnetsRule10003A8E6FEF": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.2.0/23",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e00320776D655"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1000"
      },
      "Metadata": {
        "cloudshift:comment": "Isolated Subnets Allow Inbound From Private And Isolated Subnets Rule 1000"
      }
    },
    "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e0032AllowInboundFromPrivateAndIsolatedSubnetsRule1005ABCB8BDC": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.4.0/23",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e00320776D655"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1005"
      },
      "Metadata": {
        "cloudshift:comment": "Isolated Subnets Allow Inbound From Private And Isolated Subnets Rule 1005"
      }
    },
    "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e0032AllowInboundFromPrivateAndIsolatedSubnetsRule10107F0B2F72": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.8.0/22",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e00320776D655"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1010"
      },
      "Metadata": {
        "cloudshift:comment": "Isolated Subnets Allow Inbound From Private And Isolated Subnets Rule 1010"
      }
    },
    "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e0032AllowOutboundToPrivateAndIsolatedSubnetsRule100030C21517": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.2.0/23",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e00320776D655"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1000"
      },
      "Metadata": {
        "cloudshift:comment": "Isolated Subnets Allow Outbound To Private And Isolated Subnets Rule 1000"
      }
    },
    "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e0032AllowOutboundToPrivateAndIsolatedSubnetsRule1005CD834E2A": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.4.0/23",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e00320776D655"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1005"
      },
      "Metadata": {
        "cloudshift:comment": "Isolated Subnets Allow Outbound To Private And Isolated Subnets Rule 1005"
      }
    },
    "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e0032AllowOutboundToPrivateAndIsolatedSubnetsRule10105CB93A42": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.8.0/22",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcIsolatedSubnets7fbcb89fb6985c2e0e4c954dcf0e00320776D655"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1010"
      },
      "Metadata": {
        "cloudshift:comment": "Isolated Subnets Allow Outbound To Private And Isolated Subnets Rule 1010"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PrivateSubnets1f328857bec4241abdf6044691378e1f"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fDefaultAssociationTestStackMySecureVpcPrivateSubnet14EB1DC9030AC4625": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "SubnetId": {
          "Ref": "MySecureVpcPrivateSubnet1Subnet2B67239B"
        }
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fDefaultAssociationTestStackMySecureVpcPrivateSubnet262EDB9D905CE005A": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "SubnetId": {
          "Ref": "MySecureVpcPrivateSubnet2Subnet0FD482EF"
        }
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fAllowInboundFromPublicAndIsolatedAndPrivateSubnetsRule1000C9E4B823": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.0.0/25",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1000"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Allow Inbound From Public And Isolated And Private Subnets Rule 1000"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fAllowInboundFromPublicAndIsolatedAndPrivateSubnetsRule1005C810D2E9": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.2.0/23",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1005"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Allow Inbound From Public And Isolated And Private Subnets Rule 1005"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fAllowInboundFromPublicAndIsolatedAndPrivateSubnetsRule101088A000E0": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.4.0/23",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1010"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Allow Inbound From Public And Isolated And Private Subnets Rule 1010"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fAllowInboundFromPublicAndIsolatedAndPrivateSubnetsRule10158743CDAB": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.8.0/22",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1015"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Allow Inbound From Public And Isolated And Private Subnets Rule 1015"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fAllowOutboundToPublicAndIsolatedAndPrivateSubnetsRule1000DA8201D2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.0.0/25",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1000"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Allow Outbound To Public And Isolated And Private Subnets Rule 1000"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fAllowOutboundToPublicAndIsolatedAndPrivateSubnetsRule1005BBA44978": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.2.0/23",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1005"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Allow Outbound To Public And Isolated And Private Subnets Rule 1005"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fAllowOutboundToPublicAndIsolatedAndPrivateSubnetsRule1010FF59553C": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.4.0/23",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1010"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Allow Outbound To Public And Isolated And Private Subnets Rule 1010"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fAllowOutboundToPublicAndIsolatedAndPrivateSubnetsRule10153849737C": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.8.0/22",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1015"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Allow Outbound To Public And Isolated And Private Subnets Rule 1015"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fDenyInboundFromLocalNetworkRule1200E0E02F51": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.0.0.0/8",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1200"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Deny Inbound From Local Network Rule 1200"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fDenyInboundFromLocalNetworkRule120576CEF540": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "172.16.0.0/12",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1205"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Deny Inbound From Local Network Rule 1205"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fDenyInboundFromLocalNetworkRule1210BC2EBFDC": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "192.168.0.0/16",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1210"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Deny Inbound From Local Network Rule 1210"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fDenyOutboundToLocalNetworkRule12004EC9DE2F": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.0.0.0/8",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1200"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Deny Outbound To Local Network Rule 1200"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fDenyOutboundToLocalNetworkRule12057A35B54A": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "172.16.0.0/12",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1205"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Deny Outbound To Local Network Rule 1205"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fDenyOutboundToLocalNetworkRule1210A18DDA23": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "192.168.0.0/16",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1210"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Deny Outbound To Local Network Rule 1210"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fAllowInboundFromInternetRule1400427227D8": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1400"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Allow Inbound From Internet Rule 1400"
      }
    },
    "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1fAllowOutboundToInternetRule1400B83AFCA5": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPrivateSubnets1f328857bec4241abdf6044691378e1f103A7659"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1400"
      },
      "Metadata": {
        "cloudshift:comment": "Private Subnets Allow Outbound To Internet Rule 1400"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/PublicSubnets5fd2403894aa53a4fdad35b100325d97"
          }
        ],
        "VpcId": {
          "Ref": "MySecureVpc143D3F4C"
        }
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97DefaultAssociationTestStackMySecureVpcPublicSubnet1DCF090F2433CE54F": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "SubnetId": {
          "Ref": "MySecureVpcPublicSubnet1SubnetC1CFACB6"
        }
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97DefaultAssociationTestStackMySecureVpcPublicSubnet25E6400CEB18B4E98": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "SubnetId": {
          "Ref": "MySecureVpcPublicSubnet2Subnet7CD9DB65"
        }
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97AllowInboundFromPrivateSubnetsRule1000F30B08D9": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.2.0/23",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1000"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Allow Inbound From Private Subnets Rule 1000"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97AllowInboundFromPrivateSubnetsRule100557FE8210": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.4.0/23",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1005"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Allow Inbound From Private Subnets Rule 1005"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97AllowOutboundToPrivateSubnetsRule1000B7C171D1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.2.0/23",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1000"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Allow Outbound To Private Subnets Rule 1000"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97AllowOutboundToPrivateSubnetsRule1005EFEDB7E2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.200.4.0/23",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1005"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Allow Outbound To Private Subnets Rule 1005"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97DenyInboundFromLocalNetworkRule1200CD3C7DB6": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.0.0.0/8",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1200"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Deny Inbound From Local Network Rule 1200"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97DenyInboundFromLocalNetworkRule1205697FD89C": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "172.16.0.0/12",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1205"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Deny Inbound From Local Network Rule 1205"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97DenyInboundFromLocalNetworkRule1210CF1ACDED": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "192.168.0.0/16",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1210"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Deny Inbound From Local Network Rule 1210"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97DenyOutboundToLocalNetworkRule12009EADE55F": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "10.0.0.0/8",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1200"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Deny Outbound To Local Network Rule 1200"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97DenyOutboundToLocalNetworkRule1205DDCC6744": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "172.16.0.0/12",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1205"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Deny Outbound To Local Network Rule 1205"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97DenyOutboundToLocalNetworkRule12107914B043": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "192.168.0.0/16",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": "1210"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Deny Outbound To Local Network Rule 1210"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97AllowInboundFromInternetRule1400EBF4ADCD": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "false",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1400"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Allow Inbound From Internet Rule 1400"
      }
    },
    "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d97AllowOutboundToInternetRule1400200CC8DB": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "NetworkAclId": {
          "Ref": "MySecureVpcPublicSubnets5fd2403894aa53a4fdad35b100325d972191416A"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "1400"
      },
      "Metadata": {
        "cloudshift:comment": "Public Subnets Allow Outbound To Internet Rule 1400"
      }
    },
    "MySecureVpcEipPoolEIP13CD624C3": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "MySecureVpcEipPoolEIP2328E8810": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "MySecureVpcEipPoolEIP37F0C9E30": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "MySecureVpcFlowLogIAMRoleEAC18ADD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/FlowLog"
          }
        ]
      }
    },
    "MySecureVpcFlowLogIAMRoleDefaultPolicyFCB7B2A1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MySecureVpcFlowLogLogGroup37C97A38",
                  "Arn"
                ]
              }
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MySecureVpcFlowLogIAMRoleEAC18ADD",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MySecureVpcFlowLogIAMRoleDefaultPolicyFCB7B2A1",
        "Roles": [
          {
            "Ref": "MySecureVpcFlowLogIAMRoleEAC18ADD"
          }
        ]
      }
    },
    "MySecureVpcFlowLogLogGroup37C97A38": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": "731",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/FlowLog"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "MySecureVpcFlowLog40A14036": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "MySecureVpcFlowLogIAMRoleEAC18ADD",
            "Arn"
          ]
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "MySecureVpcFlowLogLogGroup37C97A38"
        },
        "MaxAggregationInterval": "60",
        "ResourceId": {
          "Ref": "MySecureVpc143D3F4C"
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureVpc/Vpc/FlowLog"
          }
        ],
        "TrafficType": "REJECT"
      }
    },
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ],
        "Policies": [
          {
            "PolicyName": "Inline",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:AuthorizeSecurityGroupEgress",
                    "ec2:RevokeSecurityGroupIngress",
                    "ec2:RevokeSecurityGroupEgress"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":security-group/",
                          {
                            "Fn::GetAtt": [
                              "MySecureVpc143D3F4C",
                              "DefaultSecurityGroup"
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
        },
        "Timeout": "900",
        "MemorySize": "128",
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
      },
      "DependsOn": [
        "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
      ]
    }
  },
  "Outputs": {
    "MySecureVpcnatPublicIp1AD09FB42": {
      "Value": {
        "Fn::GetAtt": [
          "MySecureVpcEipPoolEIP13CD624C3",
          "PublicIp"
        ]
      },
      "Export": {
        "Name": "natPublicIp1"
      }
    },
    "MySecureVpcnatPublicIp21394DDF1": {
      "Value": {
        "Fn::GetAtt": [
          "MySecureVpcEipPoolEIP2328E8810",
          "PublicIp"
        ]
      },
      "Export": {
        "Name": "natPublicIp2"
      }
    },
    "MySecureVpcnatPublicIp32772DFCD": {
      "Value": {
        "Fn::GetAtt": [
          "MySecureVpcEipPoolEIP37F0C9E30",
          "PublicIp"
        ]
      },
      "Export": {
        "Name": "natPublicIp3"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}
