{
  "Resources": {
    "MySecureNetworkVpcC16153F8": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.200.0.0/20",
        "EnableDnsHostnames": "true",
        "EnableDnsSupport": "true",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc"
          }
        ]
      }
    },
    "MySecureNetworkVpcPublicSubnet1SubnetB2ED5840": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.0.0/26",
        "MapPublicIpOnLaunch": "true",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PublicSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcPublicSubnet1RouteTable3A24E58C": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PublicSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcPublicSubnet1RouteTableAssociationCF1DA622": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureNetworkVpcPublicSubnet1RouteTable3A24E58C"
        },
        "SubnetId": {
          "Ref": "MySecureNetworkVpcPublicSubnet1SubnetB2ED5840"
        }
      }
    },
    "MySecureNetworkVpcPublicSubnet1DefaultRoute73BED9FA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MySecureNetworkVpcIGWAB0ACCEB"
        },
        "RouteTableId": {
          "Ref": "MySecureNetworkVpcPublicSubnet1RouteTable3A24E58C"
        }
      },
      "DependsOn": [
        "MySecureNetworkVpcVPCGW576E62A5"
      ]
    },
    "MySecureNetworkVpcPublicSubnet1EIPDB4133C0": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "MySecureNetworkVpcPublicSubnet1NATGateway56B6D6D5": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MySecureNetworkVpcPublicSubnet1EIPDB4133C0",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MySecureNetworkVpcPublicSubnet1SubnetB2ED5840"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PublicSubnet1"
          }
        ]
      },
      "DependsOn": [
        "MySecureNetworkVpcPublicSubnet1DefaultRoute73BED9FA",
        "MySecureNetworkVpcPublicSubnet1RouteTableAssociationCF1DA622"
      ]
    },
    "MySecureNetworkVpcPublicSubnet2Subnet6395CFF0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.0.64/26",
        "MapPublicIpOnLaunch": "true",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PublicSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcPublicSubnet2RouteTable9935A169": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PublicSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcPublicSubnet2RouteTableAssociation9C062129": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureNetworkVpcPublicSubnet2RouteTable9935A169"
        },
        "SubnetId": {
          "Ref": "MySecureNetworkVpcPublicSubnet2Subnet6395CFF0"
        }
      }
    },
    "MySecureNetworkVpcPublicSubnet2DefaultRoute76889C0D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MySecureNetworkVpcIGWAB0ACCEB"
        },
        "RouteTableId": {
          "Ref": "MySecureNetworkVpcPublicSubnet2RouteTable9935A169"
        }
      },
      "DependsOn": [
        "MySecureNetworkVpcVPCGW576E62A5"
      ]
    },
    "MySecureNetworkVpcPublicSubnet2EIP2485711A": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "MySecureNetworkVpcPublicSubnet2NATGateway5BC62E7C": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MySecureNetworkVpcPublicSubnet2EIP2485711A",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MySecureNetworkVpcPublicSubnet2Subnet6395CFF0"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PublicSubnet2"
          }
        ]
      },
      "DependsOn": [
        "MySecureNetworkVpcPublicSubnet2DefaultRoute76889C0D",
        "MySecureNetworkVpcPublicSubnet2RouteTableAssociation9C062129"
      ]
    },
    "MySecureNetworkVpcPrivateSubnet1Subnet3B6546FB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.2.0/23",
        "MapPublicIpOnLaunch": "false",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PrivateSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcPrivateSubnet1RouteTableA5A43511": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PrivateSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcPrivateSubnet1RouteTableAssociation8AE262E2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureNetworkVpcPrivateSubnet1RouteTableA5A43511"
        },
        "SubnetId": {
          "Ref": "MySecureNetworkVpcPrivateSubnet1Subnet3B6546FB"
        }
      }
    },
    "MySecureNetworkVpcPrivateSubnet1DefaultRouteB6417A94": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MySecureNetworkVpcPublicSubnet1NATGateway56B6D6D5"
        },
        "RouteTableId": {
          "Ref": "MySecureNetworkVpcPrivateSubnet1RouteTableA5A43511"
        }
      }
    },
    "MySecureNetworkVpcPrivateSubnet2Subnet11FF6F8F": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.4.0/23",
        "MapPublicIpOnLaunch": "false",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PrivateSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcPrivateSubnet2RouteTable550CA7FC": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/PrivateSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcPrivateSubnet2RouteTableAssociationA5DD8BD9": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureNetworkVpcPrivateSubnet2RouteTable550CA7FC"
        },
        "SubnetId": {
          "Ref": "MySecureNetworkVpcPrivateSubnet2Subnet11FF6F8F"
        }
      }
    },
    "MySecureNetworkVpcPrivateSubnet2DefaultRoute64517DBE": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MySecureNetworkVpcPublicSubnet2NATGateway5BC62E7C"
        },
        "RouteTableId": {
          "Ref": "MySecureNetworkVpcPrivateSubnet2RouteTable550CA7FC"
        }
      }
    },
    "MySecureNetworkVpcIsolatedSubnet1SubnetB6F4DA45": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.8.0/23",
        "MapPublicIpOnLaunch": "false",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/IsolatedSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcIsolatedSubnet1RouteTableE672EB3C": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/IsolatedSubnet1"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcIsolatedSubnet1RouteTableAssociation42B7E7B0": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureNetworkVpcIsolatedSubnet1RouteTableE672EB3C"
        },
        "SubnetId": {
          "Ref": "MySecureNetworkVpcIsolatedSubnet1SubnetB6F4DA45"
        }
      }
    },
    "MySecureNetworkVpcIsolatedSubnet2Subnet97F98D8E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.200.10.0/23",
        "MapPublicIpOnLaunch": "false",
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/IsolatedSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcIsolatedSubnet2RouteTableEFE795B8": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/IsolatedSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcIsolatedSubnet2RouteTableAssociation15B16B31": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MySecureNetworkVpcIsolatedSubnet2RouteTableEFE795B8"
        },
        "SubnetId": {
          "Ref": "MySecureNetworkVpcIsolatedSubnet2Subnet97F98D8E"
        }
      }
    },
    "MySecureNetworkVpcIGWAB0ACCEB": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc"
          }
        ]
      }
    },
    "MySecureNetworkVpcVPCGW576E62A5": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "MySecureNetworkVpcIGWAB0ACCEB"
        },
        "VpcId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        }
      }
    },
    "MySecureNetworkVpcRestrictDefaultSecurityGroupCustomResource15FA6E4B": {
      "Type": "Custom::VpcRestrictDefaultSG",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
            "Arn"
          ]
        },
        "DefaultSecurityGroupId": {
          "Fn::GetAtt": [
            "MySecureNetworkVpcC16153F8",
            "DefaultSecurityGroup"
          ]
        },
        "Account": {
          "Ref": "AWS::AccountId"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "MySecureNetworkVpcFlowLogIAMRole4B495BB2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/FlowLog"
          }
        ]
      }
    },
    "MySecureNetworkVpcFlowLogIAMRoleDefaultPolicy46B0AC49": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MySecureNetworkVpcFlowLogLogGroupE8F05140",
                  "Arn"
                ]
              }
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MySecureNetworkVpcFlowLogIAMRole4B495BB2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MySecureNetworkVpcFlowLogIAMRoleDefaultPolicy46B0AC49",
        "Roles": [
          {
            "Ref": "MySecureNetworkVpcFlowLogIAMRole4B495BB2"
          }
        ]
      }
    },
    "MySecureNetworkVpcFlowLogLogGroupE8F05140": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": "731",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/FlowLog"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "MySecureNetworkVpcFlowLogD2A80B0F": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "MySecureNetworkVpcFlowLogIAMRole4B495BB2",
            "Arn"
          ]
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogFormat": "${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport} ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${action} ${log-status} ${vpc-id} ${subnet-id} ${instance-id} ${tcp-flags} ${type} ${pkt-srcaddr} ${pkt-dstaddr} ${region} ${az-id} ${sublocation-type} ${sublocation-id} ${pkt-src-aws-service} ${pkt-dst-aws-service} ${flow-direction} ${traffic-path}",
        "LogGroupName": {
          "Ref": "MySecureNetworkVpcFlowLogLogGroupE8F05140"
        },
        "MaxAggregationInterval": "60",
        "ResourceId": {
          "Ref": "MySecureNetworkVpcC16153F8"
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/MySecureNetwork/Vpc/FlowLog"
          }
        ],
        "TrafficType": "REJECT"
      }
    },
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ],
        "Policies": [
          {
            "PolicyName": "Inline",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:AuthorizeSecurityGroupEgress",
                    "ec2:RevokeSecurityGroupIngress",
                    "ec2:RevokeSecurityGroupEgress"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":security-group/",
                          {
                            "Fn::GetAtt": [
                              "MySecureNetworkVpcC16153F8",
                              "DefaultSecurityGroup"
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          }
        },
        "Timeout": "900",
        "MemorySize": "128",
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
            "Arn"
          ]
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region"
            },
            "value"
          ]
        },
        "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
      },
      "DependsOn": [
        "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
      ]
    }
  },
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x"
      },
      "ap-east-1": {
        "value": "nodejs20.x"
      },
      "ap-northeast-1": {
        "value": "nodejs20.x"
      },
      "ap-northeast-2": {
        "value": "nodejs20.x"
      },
      "ap-northeast-3": {
        "value": "nodejs20.x"
      },
      "ap-south-1": {
        "value": "nodejs20.x"
      },
      "ap-south-2": {
        "value": "nodejs20.x"
      },
      "ap-southeast-1": {
        "value": "nodejs20.x"
      },
      "ap-southeast-2": {
        "value": "nodejs20.x"
      },
      "ap-southeast-3": {
        "value": "nodejs20.x"
      },
      "ap-southeast-4": {
        "value": "nodejs20.x"
      },
      "ap-southeast-5": {
        "value": "nodejs20.x"
      },
      "ap-southeast-7": {
        "value": "nodejs20.x"
      },
      "ca-central-1": {
        "value": "nodejs20.x"
      },
      "ca-west-1": {
        "value": "nodejs20.x"
      },
      "cn-north-1": {
        "value": "nodejs18.x"
      },
      "cn-northwest-1": {
        "value": "nodejs18.x"
      },
      "eu-central-1": {
        "value": "nodejs20.x"
      },
      "eu-central-2": {
        "value": "nodejs20.x"
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x"
      },
      "eu-north-1": {
        "value": "nodejs20.x"
      },
      "eu-south-1": {
        "value": "nodejs20.x"
      },
      "eu-south-2": {
        "value": "nodejs20.x"
      },
      "eu-west-1": {
        "value": "nodejs20.x"
      },
      "eu-west-2": {
        "value": "nodejs20.x"
      },
      "eu-west-3": {
        "value": "nodejs20.x"
      },
      "il-central-1": {
        "value": "nodejs20.x"
      },
      "me-central-1": {
        "value": "nodejs20.x"
      },
      "me-south-1": {
        "value": "nodejs20.x"
      },
      "mx-central-1": {
        "value": "nodejs20.x"
      },
      "sa-east-1": {
        "value": "nodejs20.x"
      },
      "us-east-1": {
        "value": "nodejs20.x"
      },
      "us-east-2": {
        "value": "nodejs20.x"
      },
      "us-gov-east-1": {
        "value": "nodejs18.x"
      },
      "us-gov-west-1": {
        "value": "nodejs18.x"
      },
      "us-iso-east-1": {
        "value": "nodejs18.x"
      },
      "us-iso-west-1": {
        "value": "nodejs18.x"
      },
      "us-isob-east-1": {
        "value": "nodejs18.x"
      },
      "us-west-1": {
        "value": "nodejs20.x"
      },
      "us-west-2": {
        "value": "nodejs20.x"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}
