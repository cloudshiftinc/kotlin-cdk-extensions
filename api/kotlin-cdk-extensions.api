public final class io/cloudshiftdev/awscdklib/core/ExtensionsKt {
	public static final fun addComment (Lio/cloudshiftdev/awscdk/CfnResource;Ljava/lang/String;)V
	public static final fun addComment (Lio/cloudshiftdev/constructs/Construct;Ljava/lang/String;)V
	public static final fun addMetadata (Lio/cloudshiftdev/awscdk/CfnResource;Ljava/util/Map;)V
	public static final fun allChildren (Lio/cloudshiftdev/constructs/IConstruct;)Ljava/util/List;
	public static final fun anyResource ()Ljava/lang/String;
	public static final fun getStack (Lio/cloudshiftdev/constructs/IConstruct;)Lio/cloudshiftdev/awscdk/Stack;
	public static final fun resourceArn (Lio/cloudshiftdev/constructs/Construct;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;
	public static final fun tag (Lio/cloudshiftdev/constructs/Construct;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun tag$default (Lio/cloudshiftdev/constructs/Construct;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun uniqueId (Lio/cloudshiftdev/constructs/Construct;)Ljava/lang/String;
}

public final class io/cloudshiftdev/awscdklib/customresource/ExtensionsKt {
	public static final fun policyFromSdkCalls (Lio/cloudshiftdev/awscdk/customresources/AwsCustomResource$Builder;[Ljava/lang/String;)V
	public static final fun policyStatement (Lio/cloudshiftdev/awscdk/customresources/AwsCustomResource$Builder;Lkotlin/jvm/functions/Function1;)V
	public static final fun policyStatements (Lio/cloudshiftdev/awscdk/customresources/AwsCustomResource$Builder;Lkotlin/jvm/functions/Function1;)V
}

public final class io/cloudshiftdev/awscdklib/iam/IamExtensionsKt {
	public static final fun action (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatement$Builder;Ljava/lang/String;)V
	public static final fun action (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatementProps$Builder;Ljava/lang/String;)V
	public static final fun allow (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatement$Builder;)V
	public static final fun allow (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatementProps$Builder;)V
	public static final fun anyResource (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatement$Builder;)V
	public static final fun anyResource (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatementProps$Builder;)V
	public static final fun deny (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatement$Builder;)V
	public static final fun deny (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatementProps$Builder;)V
	public static final fun policyStatements (Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public static final fun resource (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatement$Builder;Ljava/lang/String;)V
	public static final fun resource (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatementProps$Builder;Ljava/lang/String;)V
	public static final fun resourceArn (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatement$Builder;Lio/cloudshiftdev/constructs/Construct;Lkotlin/jvm/functions/Function1;)V
	public static final fun resourceArn (Lio/cloudshiftdev/awscdk/services/iam/PolicyStatementProps$Builder;Lio/cloudshiftdev/constructs/Construct;Lkotlin/jvm/functions/Function1;)V
}

public final class io/cloudshiftdev/awscdklib/iam/PolicyStatementsBuilder {
	public fun <init> ()V
	public final fun policyStatement (Lkotlin/jvm/functions/Function1;)V
}

public final class io/cloudshiftdev/awscdklib/network/CidrBlock {
	public static final field Companion Lio/cloudshiftdev/awscdklib/network/CidrBlock$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lio/cloudshiftdev/awscdklib/network/CidrBlock;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public static final fun toAclCidr-impl (Ljava/lang/String;)Lio/cloudshiftdev/awscdk/services/ec2/AclCidr;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class io/cloudshiftdev/awscdklib/network/CidrBlock$Companion {
	public final fun allIPv4-YJChKtE ()Ljava/lang/String;
	public final fun of-VWtu0GM (Linet/ipaddr/IPAddress;)Ljava/lang/String;
	public final fun of-VWtu0GM (Ljava/lang/String;)Ljava/lang/String;
	public final fun privateNetworks ()Ljava/util/List;
}

public final class io/cloudshiftdev/awscdklib/network/ExtensionsKt {
	public static final fun attachInternetGateway (Lio/cloudshiftdev/awscdk/services/ec2/Vpc;)Lio/cloudshiftdev/awscdk/services/ec2/CfnInternetGateway;
	public static final fun getCidrBlock (Lio/cloudshiftdev/awscdk/services/ec2/ISubnet;)Ljava/lang/String;
	public static final fun getCidrBlock (Lio/cloudshiftdev/awscdk/services/ec2/IVpc;)Ljava/lang/String;
	public static final fun isIsolated (Lio/cloudshiftdev/awscdk/services/ec2/ISubnet;)Z
	public static final fun isPrivate (Lio/cloudshiftdev/awscdk/services/ec2/ISubnet;)Z
	public static final fun isPublic (Lio/cloudshiftdev/awscdk/services/ec2/ISubnet;)Z
}

public abstract class io/cloudshiftdev/awscdklib/network/SubnetGroupType {
	public synthetic fun <init> (Lio/cloudshiftdev/awscdk/services/ec2/SubnetType;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getSubnetType ()Lio/cloudshiftdev/awscdk/services/ec2/SubnetType;
}

public final class io/cloudshiftdev/awscdklib/network/SubnetGroupType$Isolated : io/cloudshiftdev/awscdklib/network/SubnetGroupType {
	public static final field INSTANCE Lio/cloudshiftdev/awscdklib/network/SubnetGroupType$Isolated;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/cloudshiftdev/awscdklib/network/SubnetGroupType$Private : io/cloudshiftdev/awscdklib/network/SubnetGroupType {
	public static final field INSTANCE Lio/cloudshiftdev/awscdklib/network/SubnetGroupType$Private;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/cloudshiftdev/awscdklib/network/SubnetGroupType$Public : io/cloudshiftdev/awscdklib/network/SubnetGroupType {
	public static final field INSTANCE Lio/cloudshiftdev/awscdklib/network/SubnetGroupType$Public;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/cloudshiftdev/awscdklib/network/SubnetPredicates {
	public static final field INSTANCE Lio/cloudshiftdev/awscdklib/network/SubnetPredicates;
	public final fun groupNamed (Ljava/lang/String;)Lio/cloudshiftdev/awscdk/services/ec2/SubnetSelection;
	public final fun isolatedSubnets ()Lio/cloudshiftdev/awscdk/services/ec2/SubnetSelection;
	public final fun privateSubnets ()Lio/cloudshiftdev/awscdk/services/ec2/SubnetSelection;
	public final fun publicSubnets ()Lio/cloudshiftdev/awscdk/services/ec2/SubnetSelection;
	public final fun type (Lio/cloudshiftdev/awscdk/services/ec2/SubnetType;)Lio/cloudshiftdev/awscdk/services/ec2/SubnetSelection;
	public final fun type (Lio/cloudshiftdev/awscdklib/network/SubnetGroupType;)Lio/cloudshiftdev/awscdk/services/ec2/SubnetSelection;
}

public final class io/cloudshiftdev/awscdklib/network/firewall/NetworkFirewall : io/cloudshiftdev/constructs/Construct {
	public fun <init> (Lio/cloudshiftdev/constructs/Construct;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
}

public final class io/cloudshiftdev/awscdklib/network/firewall/NetworkFirewallPropsBuilder {
	public final fun subnetPlacement (Ljava/lang/String;)V
	public final fun vpc (Lio/cloudshiftdev/awscdk/services/ec2/Vpc;)V
}

public final class io/cloudshiftdev/awscdklib/network/routable/NatGatewayRoutable : io/cloudshiftdev/awscdklib/network/routable/SingletonRoutable {
	public fun <init> ()V
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun routeTarget (Ljava/lang/Object;Lio/cloudshiftdev/awscdklib/network/routable/RoutableContext;)Lio/cloudshiftdev/awscdklib/network/routable/RouteTarget;
	public fun routeTarget (Ljava/util/List;Lio/cloudshiftdev/awscdklib/network/routable/RoutableContext;)Lio/cloudshiftdev/awscdklib/network/routable/RouteTarget;
}

public final class io/cloudshiftdev/awscdklib/network/routable/NatGatewayRoutableBuilder {
	public final fun subnetPlacements (Ljava/lang/String;)V
}

public final class io/cloudshiftdev/awscdklib/network/routable/NetworkFirewallRoutable : io/cloudshiftdev/awscdklib/network/routable/SingletonRoutable {
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public fun routeTarget (Lio/cloudshiftdev/awscdklib/network/firewall/NetworkFirewall;Lio/cloudshiftdev/awscdklib/network/routable/RoutableContext;)Lio/cloudshiftdev/awscdklib/network/routable/RouteTarget;
	public synthetic fun routeTarget (Ljava/lang/Object;Lio/cloudshiftdev/awscdklib/network/routable/RoutableContext;)Lio/cloudshiftdev/awscdklib/network/routable/RouteTarget;
}

public abstract interface class io/cloudshiftdev/awscdklib/network/routable/Routable {
	public abstract fun routeTarget (Lio/cloudshiftdev/awscdklib/network/routable/RoutableContext;)Lio/cloudshiftdev/awscdklib/network/routable/RouteTarget;
}

public final class io/cloudshiftdev/awscdklib/network/routable/RoutableContext {
	public fun <init> (Lio/cloudshiftdev/constructs/Construct;Lio/cloudshiftdev/awscdklib/network/securevpc/SubnetResolver;Ljava/lang/String;Lio/cloudshiftdev/awscdk/services/ec2/Vpc;Lio/cloudshiftdev/awscdklib/network/securevpc/NetworkDefinition;)V
	public final fun getAvailabilityZone ()Ljava/lang/String;
	public final fun getNetworkDefinition ()Lio/cloudshiftdev/awscdklib/network/securevpc/NetworkDefinition;
	public final fun getSubnetResolver ()Lio/cloudshiftdev/awscdklib/network/securevpc/SubnetResolver;
	public final fun getSubnetScope ()Lio/cloudshiftdev/constructs/Construct;
	public final fun getVpc ()Lio/cloudshiftdev/awscdk/services/ec2/Vpc;
}

public final class io/cloudshiftdev/awscdklib/network/routable/RouteTarget {
	public fun <init> (Ljava/lang/String;Lio/cloudshiftdev/awscdk/services/ec2/RouterType;Z)V
	public final fun getEnablesInternetConnectivity ()Z
	public final fun getRouterId ()Ljava/lang/String;
	public final fun getRouterType ()Lio/cloudshiftdev/awscdk/services/ec2/RouterType;
}

public abstract class io/cloudshiftdev/awscdklib/network/routable/SingletonRoutable : io/cloudshiftdev/awscdklib/network/routable/Routable {
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun routeTarget (Lio/cloudshiftdev/awscdklib/network/routable/RoutableContext;)Lio/cloudshiftdev/awscdklib/network/routable/RouteTarget;
	public abstract fun routeTarget (Ljava/lang/Object;Lio/cloudshiftdev/awscdklib/network/routable/RoutableContext;)Lio/cloudshiftdev/awscdklib/network/routable/RouteTarget;
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/NaclBuilder {
	public fun <init> ()V
	public final fun allowBetweenPeeredSubnets (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun allowBetweenPeeredSubnets$default (Lio/cloudshiftdev/awscdklib/network/securevpc/NaclBuilder;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun denyToAllPrivateNetworks ()V
	public final fun denyToLocalNetwork (Ljava/lang/String;)V
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/NaclPeeringBuilder {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/NetworkDefinition {
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCidrBlock-YJChKtE ()Ljava/lang/String;
	public final fun getMaxAzs ()I
	public final fun getReservedAzs ()I
	public final fun getSubnetGroups ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface annotation class io/cloudshiftdev/awscdklib/network/securevpc/NetworkDslMarker : java/lang/annotation/Annotation {
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/RouteBuilder {
	public fun <init> ()V
	public final fun internet (Lio/cloudshiftdev/awscdklib/network/routable/Routable;)V
	public final fun local (Lio/cloudshiftdev/awscdklib/network/routable/Routable;)V
}

public abstract class io/cloudshiftdev/awscdklib/network/securevpc/RouteDestination {
	public fun name ()Ljava/lang/String;
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/RouteDestination$Cidr : io/cloudshiftdev/awscdklib/network/securevpc/RouteDestination {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCidr-YJChKtE ()Ljava/lang/String;
	public fun name ()Ljava/lang/String;
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/RouteDestination$Internet : io/cloudshiftdev/awscdklib/network/securevpc/RouteDestination {
	public static final field INSTANCE Lio/cloudshiftdev/awscdklib/network/securevpc/RouteDestination$Internet;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/RouteDestination$Vpc : io/cloudshiftdev/awscdklib/network/securevpc/RouteDestination {
	public static final field INSTANCE Lio/cloudshiftdev/awscdklib/network/securevpc/RouteDestination$Vpc;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/SecureVpc : io/cloudshiftdev/constructs/Construct {
	public fun <init> (Lio/cloudshiftdev/constructs/Construct;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun getVpc ()Lio/cloudshiftdev/awscdk/services/ec2/Vpc;
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/SecureVpcBuilder {
	public fun <init> ()V
	public final fun cidrBlock (Ljava/lang/String;)V
	public final fun isolatedSubnetGroup (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun isolatedSubnetGroup$default (Lio/cloudshiftdev/awscdklib/network/securevpc/SecureVpcBuilder;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun maxAzs (I)V
	public final fun nacl (Lkotlin/jvm/functions/Function1;)V
	public final fun privateSubnetGroup (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun privateSubnetGroup$default (Lio/cloudshiftdev/awscdklib/network/securevpc/SecureVpcBuilder;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun publicSubnetGroup (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun publicSubnetGroup$default (Lio/cloudshiftdev/awscdklib/network/securevpc/SecureVpcBuilder;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun reservedAzs (I)V
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/SecureVpcKt {
	public static final fun publicPrivateIsolatedNetwork (Lio/cloudshiftdev/awscdklib/network/securevpc/SecureVpcBuilder;)V
	public static final fun publicPrivateIsolatedNetworkWithFirewall (Lio/cloudshiftdev/awscdklib/network/securevpc/SecureVpcBuilder;Lio/cloudshiftdev/awscdklib/network/routable/NetworkFirewallRoutable;)V
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/SubnetGroupBuilder {
	public final fun allowCrossAzNaclFlows ()V
	public final fun cidrMask (I)V
	public final fun getRouting ()Lio/cloudshiftdev/awscdklib/network/securevpc/RouteBuilder;
	public final fun reserved ()V
	public final fun routing (Lkotlin/jvm/functions/Function1;)V
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/SubnetGroupSpec {
	public fun <init> (Ljava/lang/String;Lio/cloudshiftdev/awscdklib/network/SubnetGroupType;Ljava/lang/Integer;ZLjava/util/List;Z)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowCrossAzNaclFlows ()Z
	public final fun getCidrMask ()Ljava/lang/Integer;
	public final fun getName ()Ljava/lang/String;
	public final fun getReserved ()Z
	public final fun getRoutes ()Ljava/util/List;
	public final fun getSubnetGroupType ()Lio/cloudshiftdev/awscdklib/network/SubnetGroupType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/cloudshiftdev/awscdklib/network/securevpc/SubnetResolver {
	public abstract fun resolve (Ljava/lang/String;Ljava/lang/String;)Lio/cloudshiftdev/awscdk/services/ec2/Subnet;
}

public final class io/cloudshiftdev/awscdklib/network/securevpc/SubnetRouteSpec {
	public fun <init> (Lio/cloudshiftdev/awscdklib/network/securevpc/RouteDestination;Lio/cloudshiftdev/awscdklib/network/routable/Routable;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDestination ()Lio/cloudshiftdev/awscdklib/network/securevpc/RouteDestination;
	public final fun getRoutable ()Lio/cloudshiftdev/awscdklib/network/routable/Routable;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/cloudshiftdev/awscdklib/s3/ExtensionsKt {
	public static final fun secureBucket (Lio/cloudshiftdev/awscdk/services/s3/BucketProps$Builder;)V
}

